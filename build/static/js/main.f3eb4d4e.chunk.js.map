{"version":3,"sources":["components/Navbar.jsx","components/Article/Article.jsx","components/Article/MiniArticle.jsx","components/PageContainer.jsx","data/faq.js","components/screens/LandingPageScreen.jsx","data/program.js","components/screens/ProgramScreen.jsx","data/articles.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","Container","Buttons","Grid","container","item","TurboLink","underline","color","href","Logo","Typography","variant","styled","div","Link","Article","props","articles","match","params","id","title","imgMain","imgSec","ingress","paragraph","TurboList","alt","src","Ingress","align","Paragraph","List","MiniArticle","imgSrc","TurboCard","CardActionArea","TurboCardMedia","image","CardContent","gutterBottom","component","Card","CardMedia","PageContainer","StyledDiv","children","faq","question","answer","LandingPageScreen","CoverImage","Title","spacing","map","a","imgHeader","TurboPaper","object","img","d_one","text","d_two","ProgramScreen","obj","App","GlobalCss","withStyles","Fragment","path","exact","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3eb4d4e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Grid, Link, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Container>\r\n      <Buttons>\r\n        <Grid container>\r\n          <Grid item>\r\n            <TurboLink underline=\"none\" color=\"secondary\" href=\"/\">\r\n              Home\r\n            </TurboLink>\r\n          </Grid>\r\n          <Grid item>\r\n            <TurboLink underline=\"none\" color=\"secondary\" href=\"/program\">\r\n              Program\r\n            </TurboLink>\r\n          </Grid>\r\n        </Grid>\r\n      </Buttons>\r\n      <Logo>\r\n        <Typography variant=\"h4\" color=\"primary\">\r\n          Holmefestivalen\r\n        </Typography>\r\n      </Logo>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nconst Buttons = styled.div`\r\n  align-content: flex-start;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  align-content: flex-end;\r\n  margin-right: 25px;\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 0.9rem !important;\r\n  }\r\n`;\r\n\r\nconst TurboLink = styled(Link)`\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n  && {\r\n    border: none;\r\n    padding: 16px 32px;\r\n    text-align: center;\r\n    transition: 0.3s;\r\n    :hover {\r\n      background-color: #333333;\r\n      color: white;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 0.9rem !important;\r\n    padding: 8px 16px !important;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  overflow: hidden;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  && {\r\n    padding: 12px;\r\n  }\r\n  z-index: 99999;\r\n`;\r\n","import React from \"react\";\r\nimport { Typography, List } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Article = (props) => {\r\n  const { articles, match } = props;\r\n  const id = match.params.id;\r\n  const { title, imgMain, imgSec, ingress, paragraph } = articles[id];\r\n  return (\r\n    <TurboList>\r\n      <Typography variant=\"h3\" color=\"primary\">\r\n        {title}\r\n      </Typography>\r\n      {imgMain ? <img alt=\"Hovedbilde\" src={\"../\" + imgMain} /> : \"\"}\r\n      <Ingress align=\"center\" color=\"primary\" variant=\"p\">\r\n        {ingress}\r\n      </Ingress>\r\n      {imgSec ? <img alt=\"sekundÃ¦rbilde\" src={\"../\" + imgSec} /> : \"\"}\r\n      <Paragraph align=\"center\" color=\"primary\" variant=\"p\">\r\n        {paragraph}\r\n      </Paragraph>\r\n    </TurboList>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n\r\nconst Ingress = styled(Typography)`\r\n  && {\r\n    margin: 25px;\r\n    max-width: 1000px;\r\n  }\r\n`;\r\n\r\nconst Paragraph = styled(Typography)`\r\n  margin: 25px;\r\n  max-width: 1000px;\r\n`;\r\n\r\nconst TurboList = styled(List)`\r\n  margin-bottom: 115px;\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n  flex-direction: column;\r\n  && {\r\n    margin-top: 155px;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    max-width: 1000px;\r\n    height: auto;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Typography,\r\n  CardContent,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MiniArticle = (props) => {\r\n  const { id, title, imgSrc } = props;\r\n\r\n  return (\r\n    <TurboCard>\r\n      <Link href={\"/article/\" + id}>\r\n        <CardActionArea>\r\n          <TurboCardMedia image={imgSrc} title={title} />\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              component=\"h2\"\r\n              color=\"secondary\"\r\n            >\r\n              {title}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Link>\r\n    </TurboCard>\r\n  );\r\n};\r\n\r\nexport default MiniArticle;\r\n\r\nconst TurboCard = styled(Card)`\r\n  max-width: 750px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst TurboCardMedia = styled(CardMedia)`\r\n  max-width: 1000px;\r\n  width: 100%;\r\n  height: 150px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PageContainer = (props) => {\r\n  return <StyledDiv>{props.children}</StyledDiv>;\r\n};\r\n\r\nexport default PageContainer;\r\n\r\nconst StyledDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n  flex-direction: column;\r\n`;\r\n","export const faq = [\r\n  { id: 0, question: \"Kor mye Ã¸l burde man ta me seg?\", answer: \"Ja.\" },\r\n  { id: 1, question: \"Kor mye sprit burde man ta me seg?\", answer: \"Ja.\" },\r\n  { id: 2, question: \"Kommer det tell Ã¥ blÃ¥s?\", answer: \"Ja.\" },\r\n  {\r\n    id: 3,\r\n    question: \"Kommer eg tell Ã¥ bi et nytt menneske av festivalen?\",\r\n    answer: \"Koffer spÃ¸rr du om det?\",\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Kommer det nÃ¥n artista det her Ã¥ret?\",\r\n    answer: \"Vi fÃ¥r sjÃ¥.\",\r\n  },\r\n  { id: 5, question: \"Kem som har tatt stolen min ?!\", answer: \"Ja.\" },\r\n];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MiniArticle from \"../Article/MiniArticle\";\r\nimport { List, Typography } from \"@material-ui/core\";\r\nimport PageContainer from \"../PageContainer\";\r\nimport { faq } from \"../../data/faq\";\r\n\r\nconst LandingPageScreen = (props) => {\r\n  const { articles } = props;\r\n\r\n  return (\r\n    <PageContainer>\r\n      <CoverImage src=\"landing_page.png\" />\r\n      <Title gutterBottom variant=\"h4\" color=\"primary\">\r\n        Rykende Ferske nyheter\r\n      </Title>\r\n      <TurboList container spacing={3}>\r\n        {articles.map((a) => {\r\n          return (\r\n            <TurboList item>\r\n              <MiniArticle id={a.id} title={a.title} imgSrc={a.imgHeader} />\r\n            </TurboList>\r\n          );\r\n        })}\r\n      </TurboList>\r\n      <TurboPaper>\r\n        <Title gutterBottom variant=\"h4\" color=\"primary\">\r\n          Ofte stilte spÃ¸rsmÃ¥l\r\n        </Title>\r\n        <TurboList container spacing={3}>\r\n          {faq.map((object) => {\r\n            return (\r\n              <TurboList item>\r\n                <Typography variant=\"p\" color=\"primary\">\r\n                  {object.question}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"p\" color=\"secondary\">\r\n                  {object.answer}\r\n                </Typography>\r\n              </TurboList>\r\n            );\r\n          })}\r\n        </TurboList>\r\n      </TurboPaper>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default LandingPageScreen;\r\n\r\nconst TurboPaper = styled.div`\r\n  padding: 1rem;\r\n  max-width: 750px;\r\n  width: 100%;\r\n  margin-top: 55px;\r\n`;\r\n\r\nconst Title = styled(Typography)`\r\n  margin-top: 55px;\r\n`;\r\n\r\nconst TurboList = styled(List)`\r\n  max-width: 750px;\r\n  width: 100%;\r\n  margin: 5px;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n  height: auto;\r\n  width: 100%;\r\n  overflow: hidden;\r\n`;\r\n","export const d_one = [\r\n  { id: 0, variant: \"h2\", color: \"primary\", text: \"Dag 1\" },\r\n  {\r\n    id: 0,\r\n    variant: \"h2\",\r\n    color: \"secondary\",\r\n    text: \"13:00 - PÃ¸lser & chill\",\r\n  },\r\n  {\r\n    id: 0,\r\n    variant: \"h2\",\r\n    color: \"secondary\",\r\n    text: \"15:00 - LÃ¸klympiske Leker Del 1\",\r\n  },\r\n  {\r\n    id: 0,\r\n    variant: \"h2\",\r\n    color: \"secondary\",\r\n    text: '20:00 - \"BjÃ¸rn RosenstrÃ¸m\"-konsert',\r\n  },\r\n];\r\n\r\nexport const d_two = [\r\n  { id: 0, variant: \"h2\", color: \"primary\", text: \"Dag 2\" },\r\n  {\r\n    id: 0,\r\n    variant: \"h2\",\r\n    color: \"secondary\",\r\n    text: \"13:00 - PÃ¸lser & chill\",\r\n  },\r\n  {\r\n    id: 0,\r\n    variant: \"h2\",\r\n    color: \"secondary\",\r\n    text: \"15:00 - LÃ¸klympiske Leker Del 2\",\r\n  },\r\n  {\r\n    id: 0,\r\n    variant: \"h2\",\r\n    color: \"secondary\",\r\n    text: '20:00 - \"BjÃ¸rn RosenstrÃ¸m\"-konsert',\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport PageContainer from \"../PageContainer\";\r\nimport { List, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport { d_two, d_one } from \"../../data/program\";\r\n\r\nconst ProgramScreen = () => {\r\n  return (\r\n    <PageContainer>\r\n      <TurboList>\r\n        {d_one.map((obj) => {\r\n          return (\r\n            <List item>\r\n              <Typography variant={obj.variant} color={obj.color}>\r\n                {obj.text}\r\n              </Typography>\r\n            </List>\r\n          );\r\n        })}\r\n        {d_two.map((obj) => {\r\n          return (\r\n            <List item>\r\n              <Typography variant={obj.variant} color={obj.color}>\r\n                {obj.text}\r\n              </Typography>\r\n            </List>\r\n          );\r\n        })}\r\n      </TurboList>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ProgramScreen;\r\n\r\nconst TurboList = styled(List)`\r\n  margin-top: 150px;\r\n  margin-bottom: 150px;\r\n`;\r\n","export const articles = [\r\n  {\r\n    id: 0,\r\n    title: \"LÃ¸klympiske Leker\",\r\n    ingress: \"Etter lang tid returner LÃ¸klympiske leker til holmefestivalen.\",\r\n    paragraph:\r\n      \"Ãrets LÃ¸klympiske leker returnerer med enda tÃ¸ffere utfordringer, som bÃ¥de utfordrer sinn og fordÃ¸yelsessystem.. \" +\r\n      \"Ãrets deltakere har mye Ã¥ se frem til. Ãrets utfordringer er altsÃ¥ sÃ¥ fullproppet med gÃ¸y og/eller morro at det \" +\r\n      \"ikke er annet Ã¥ gjÃ¸re enn Ã¥ sette av hele sommeren. Disse utfordringene kommer til Ã¥ gi en hver deltaker muligheten\" +\r\n      \" til Ã¥ teste sin og sin lagkamerats ytterste grenser for hva som er sosialt akseptabelt, fysisk mulig og overkommelig\" +\r\n      \" for ett og/eller flere mennesker.\",\r\n    imgHeader: \"whoomp_header.png\",\r\n    imgMain: \"Whoomp.png\",\r\n    imgSec: \"onion.png\",\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Spillerny Sponsor!\",\r\n    ingress:\r\n      \"Etter lange forhandlinger har festivalen endelig landet storsponsoren skjÃ¸l!.\",\r\n    paragraph:\r\n      \"Hard and Wood Flooring company har i Ã¥resvis produsert tonnevis med kvalitets-parkett. \" +\r\n      \"Og siden selskapet har hatt et stort overskudd i Ã¥r med tanke pÃ¥ #DisseKoronaTider gÃ¥r overskuddet til deltakerne av \" +\r\n      \"festivalen.\",\r\n    imgHeader: \"hard_and_wood.png\",\r\n    imgMain: \"hard_and_wood.png\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Fine muligheter\",\r\n    imgSrc: \"https://via.placeholder.com/750\",\r\n  },\r\n];\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Article from \"./components/Article/Article\";\nimport LandingPageScreen from \"./components/screens/LandingPageScreen\";\nimport ProgramScreen from \"./components/screens/ProgramScreen\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport { articles } from \"./data/articles\";\n\nfunction App() {\n  const GlobalCss = withStyles({\n    // @global is handled by jss-plugin-global.\n    \"@global\": {\n      // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n      \".MuiTypography-colorPrimary\": {\n        color: \"#454346\",\n      },\n      \".MuiTypography-colorSecondary\": {\n        color: \"#f47023\",\n      },\n    },\n  })(() => null);\n\n  return (\n    <React.Fragment>\n      <GlobalCss />\n      <Navbar />\n      <BrowserRouter>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => <LandingPageScreen articles={articles} />}\n          />\n          <Route path=\"/program\" exact component={ProgramScreen} />\n          <Route\n            path=\"/article/:id\"\n            exact\n            render={(props) => <Article articles={articles} {...props} />}\n          />\n        </Switch>\n      </BrowserRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}